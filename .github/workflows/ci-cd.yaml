name: Java CICD

on:
  push:
    branches: [ "develop", "main", "master"]
  pull_request:
    types:
      - closed
    branches: [ "develop", "main", "master"]

permissions:
  contents: read

jobs:
  cicd:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: make application-prod.yml
        run: |
          cd src/main
          mkdir resources
          cd resources
          touch ./application-prod.yaml
          echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.yaml
          cat ./application-prod.yaml
          ls -al
          pwd
        shell: bash

      - name: Build with Gradle
        run: chmod +x gradlew
      
      - name: build
        run: ./gradlew clean build -x test

      - name: Docker Image Build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build --build-arg ENVIRONMENT=prod -t ${{ secrets.DOCKER_IMAGE_NAME }} .
          docker images -a
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
     
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}
            sudo docker stop ${{ secrets.DOCKER_IMAGE_NAME }}
            sudo docker rm ${{ secrets.DOCKER_IMAGE_NAME }}
            sudo docker run --name ${{ secrets.DOCKER_IMAGE_NAME }} -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}
            sudo docker rmi $(sudo docker images --filter "dangling=true" -q --no-trunc)
      
      - name: slack-action-success
        uses: 8398a7/action-slack@v3
        with:
          text: '[Github Actions]백엔드 배포 완료'
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL }} # required
        if: success() # Pick up events even if the job fails or is canceled.

      # - name: slack-action-fail
      #   uses: 8398a7/action-slack@v3
      #   with:
      #     text: '[Github Actions]백엔드 배포 실패'
      #     status: ${{ job.status }}
      #     fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_URL }} # required
      #   if: failure()
